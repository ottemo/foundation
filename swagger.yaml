swagger: "2.0"

info:
  description: "Package foundation represents default Ottemo e-commerce product application entry point."
  version: "0.0.1"
  title: "Foundation API"
  termsOfService: "http://subject.to.change"

  contact:
    email: "subject@to.change"

  license:
    name: "Example 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

host: "localhost:3000"

schemes:
- "http"
- "https"

consumes:
- "application/json"

produces:
- "application/json"

paths:

  /app/email:
    post:
      tags:
        - app
      description: creates a new email message via a POST from the Contact Us form
      parameters:
      - name: body
        in: body
        schema:
          type: object
          required:
          - formLocation
          properties:
            formLocation:
              type: string
              description: Web page(?) where form is located
            email:
              type: string
          additionalProperties:
            type: string
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /app/location:
    get:
      tags:
        - app
      description: return a time zone of session
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

    post:
      tags:
        - app
      description: validate time zone and set it to session
      parameters:
      - name: body
        in: body
        schema:
          type: object
          description: One of parameters should be set
          properties:
            timeZone:
              type: string
            time_zone:
              type: string
            time:
              type: string
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /app/login:
    get:
      tags:
        - auth
      description: login application with root rights
      parameters:
      - name: login
        in: query
        type: string
        required: true
      - name: password
        in: query
        type: string
        required: true
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

    post:
      tags:
        - auth
      description: login application with root rights
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              login:
                type: string
              password:
                type: string
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /app/logout:
    get:
      tags:
        - auth
      description: logout application - session data clear
      responses:
        200:
          description: processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /app/rights:
    get:
      tags:
        - app
      description: function to get info about current rights
      responses:
        200:
          description: Processed
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                is_admin:
                  type: boolean
              additionalProperties:
                type: string

  /app/status:
    get:
      tags:
        - app
      description: function to get info about current application status
      responses:
        200:
          description: OK
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                Ottemo:
                  type: string
                Ottemo.VersionMajor:
                  type: integer
                Ottemo.VersionMinor:
                  type: integer
                Ottemo.BuildTags:
                  type: string
                Ottemo.BuildNumber:
                  type: string
                Ottemo.BuildDate:
                  type: string
                Ottemo.BuildBranch:
                  type: string
                Ottemo.BuildHash:
                  type: string
                Ottemo.DBEngine:
                  type: string
                Ottemo.DBConnected:
                  type: string
                Ottemo.DBName:
                  type: string
                StartTime:
                  type: string
                Uptime:
                  type: integer
                GO:
                  type: string
                NumGoroutine:
                  type: integer
                NumCPU:
                  type: integer
                memStats.Alloc:
                  type: integer
                memStats.TotalAlloc:
                  type: integer
                memStats.Sys:
                  type: integer
                memStats.Lookups:
                  type: integer
                memStats.Mallocs:
                  type: integer
                memStats.Frees:
                  type: integer
                memStats.HeapAlloc:
                  type: integer
                memStats.HeapSys:
                  type: integer
                memStats.HeapIdle:
                  type: integer
                memStats.HeapInuse:
                  type: integer
                memStats.HeapReleased:
                  type: integer
                memStats.HeapObjects:
                  type: integer
                memStats.StackInuse:
                  type: integer
                memStats.StackSys:
                  type: integer
                memStats.MSpanInuse:
                  type: integer
                memStats.MSpanSys:
                  type: integer
                memStats.MCacheInuse:
                  type: integer
                memStats.MCacheSys:
                  type: integer
                memStats.BuckHashSys:
                  type: integer
                memStats.GCSys:
                  type: integer
                memStats.OtherSys:
                  type: integer
                memStats.NextGC:
                  type: integer
                memStats.LastGC:
                  type: integer
                memStats.PauseTotalNs:
                  type: integer
                memStats.NumGC:
                  type: integer
                memStats.EnableGC:
                  type: boolean
                memStats.DebugGC:
                  type: boolean

  /authorizenet/receipt:
    post:
      tags:
        - authorizenet
        - payment
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              x_response_code:
                type: string
              x_session:
                type: string
              x_card_type:
                type: string
              x_account_number:
                type: string
              x_amount:
                type: string
              x_trans_id:
                type: string
      description: >
        processes Authorize.net receipt response
        can be used for redirecting customer to it on exit from authorize.net
      responses:
        200:
          description: >
            Processed.
            Positive result could contains:
              - DeclineHTML
              - StructRestRedirect:
                - Result: object
                - Location: redirectURL
                - DoRedirect: boolean
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /authorizenet/relay:
    post:
      tags:
        - authorizenet
        - payment
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              x_response_code:
                type: string
              x_session:
                type: string
              x_card_type:
                type: string
              x_account_number:
                type: string
              x_amount:
                type: string
              x_trans_id:
                type: string
      description: processes Authorize.net relay response
      responses:
        200:
          description: >
            Processed.
            Positive result could contains:
              - DeclineHTML
              - ReceiptHTML
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /blog/post:
    post:
      tags:
        - blog
      description: creates blog post by provided data
      security:
        - OTTEMOSESSION: []
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/BlogPostModelHash'
      responses:
        200:
          description: Processed
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                result:
                  $ref: '#/definitions/BlogPostModelHash'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /blog/post/{id}:
    delete:
      tags:
        - blog
      description: deletes post by id
      security:
        - OTTEMOSESSION: []
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

    get:
      tags:
        - blog
      description: returns post by id
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: Processed
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                result:
                  allOf:
                  - $ref: '#/definitions/BlogPostModelHash'
                  - type: object
                    properties:
                      extra:
                        type: object
                        properties:
                          next:
                            $ref: '#/definitions/BlogPostModelHash'
                          prev:
                            $ref: '#/definitions/BlogPostModelHash'

    put:
      tags:
        - blog
      description: updates post by id
      security:
        - OTTEMOSESSION: []
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/BlogPostModelHash'
      responses:
        200:
          description: Processed
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                result:
                  $ref: '#/definitions/BlogPostModelHash'

  /blog/posts:
    get:
      tags:
        - blog
      description: returns list of posts or count
      security:
        - OTTEMOSESSION: []
      parameters:
      - name: action
        in: query
        type: string
        enum:
        - count
      responses:
        200:
          description: >
            Processed.
            Could return:
              - list of BlogPostModelHash
              - count
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

  /blog/posts/attributes:
    get:
      tags:
        - blog
      description: returns a list of blog post attributes
      responses:
        200:
          description: Processed
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - type: object
              properties:
                result:
                  type: array
                  items:
                    $ref: '#/definitions/StructAttributeInfo'

# /cart {GET}
# /cart/coupons {POST}
# /cart/coupons/:code {DELETE}
# /cart/giftcards/:giftcode {DELETE}
# /cart/giftcards/:giftcode {POST}
# /cart/item {POST}
# /cart/item/:itemIdx {DELETE}
# /cart/item/:itemIdx/:qty {PUT}
# /categories {GET}
# /categories/attributes {GET}
# /categories/tree {GET}
# /category {POST}
# /category/:categoryID {DELETE}
# /category/:categoryID {GET}
# /category/:categoryID {PUT}
# /category/:categoryID/layers {GET}
# /category/:categoryID/media/:mediaType {GET}
# /category/:categoryID/media/:mediaType/:mediaName {DELETE}
# /category/:categoryID/media/:mediaType/:mediaName {GET}
# /category/:categoryID/media/:mediaType/:mediaName {POST}
# /category/:categoryID/mediapath/:mediaType {GET}
# /category/:categoryID/product/:productID {DELETE}
# /category/:categoryID/product/:productID {POST}
# /category/:categoryID/products {GET}
# /checkout {GET}
# /checkout {PUT}
# /checkout/billing/address {PUT}
# /checkout/payment/method/:method {PUT}
# /checkout/payment/methods {GET}
# /checkout/shipping/address {PUT}
# /checkout/shipping/method/:method/:rate {PUT}
# /checkout/shipping/methods {GET}
# /checkout/submit {POST}
# /cms/block {POST}
# /cms/block/:blockID {DELETE}
# /cms/block/:blockID {GET}
# /cms/block/:blockID {PUT}
# /cms/blocks {GET}
# /cms/blocks/attributes {GET}
# /cms/media {GET}
# /cms/media {POST}
# /cms/media/:mediaName {DELETE}
# /cms/media/:mediaName/:mediaType {DELETE}
# /cms/media/:mediaType {GET}
# /cms/page {POST}
# /cms/page/:pageID {DELETE}
# /cms/page/:pageID {GET}
# /cms/page/:pageID {PUT}
# /cms/pages {GET}
# /cms/pages/attributes {GET}
# /config/groups {GET}
# /config/item/:path {GET}
# /config/value/:path {DELETE}
# /config/value/:path {GET}
# /config/value/:path {POST}
# /config/value/:path {PUT}
# /config/values {GET}
# /config/values/refresh {GET}
# /coupons {GET}
# /coupons {POST}
# /coupons/:id {DELETE}
# /coupons/:id {GET}
# /coupons/:id {PUT}
# /cron/schedule {GET}
# /cron/task {GET}
# /cron/task {POST}
# /cron/task/:taskIndex {PUT}
# /cron/task/disable/:taskIndex {GET}
# /cron/task/enable/:taskIndex {GET}
# /cron/task/run/:taskIndex {GET}
# /csv/coupons {GET}
# /csv/coupons {POST}
# /emma/contact {POST}
# /friend/captcha {GET}
# /friend/email {POST}
# /giftcard {POST}
# /giftcard/:id/history {GET}
# /giftcards {GET}
# /giftcards/:giftcode {GET}
# /impex/export/:model {GET}
# /impex/import {POST}
# /impex/import/:model {POST}
# /impex/import/status {GET}
# /impex/models {GET}
# /impex/test/import {POST}
# /impex/test/mapping {POST}
# /media {GET}
# /order/:orderID {DELETE}
# /order/:orderID {GET}
# /order/:orderID {PUT}
# /order/:orderID/emailOrderConfirmation {GET}
# /order/:orderID/emailShipStatus {GET}
# /order/:orderID/emailTrackingCode {POST}
# /orders {GET}
# /orders/attributes {GET}
# /orders/exportToCSV {POST}
# /orders/setStatus {POST}
# /patch/options {GET}
# /paypal/cancel {GET}
# /paypal/success {GET}
# /product {POST}
# /product/:productID {DELETE}
# /product/:productID {GET}
# /product/:productID {PUT}
# /product/:productID/media/:mediaType {GET}
# /product/:productID/media/:mediaType/:mediaName {DELETE}
# /product/:productID/media/:mediaType/:mediaName {GET}
# /product/:productID/media/:mediaType/:mediaName {POST}
# /product/:productID/media/:mediaType/:mediaName {PUT}
# /product/:productID/mediapath/:mediaType {GET}
# /product/:productID/related {GET}
# /product/:productID/stock {POST}
# /products {GET}
# /products/attribute {POST}
# /products/attribute/:attribute {DELETE}
# /products/attribute/:attribute {PUT}
# /products/attributes {GET}
# /proxy.html {GET}
# /ratedreview/:productID/:stars {POST}
# /rating/:productID {GET}
# /reporting/customer-activity {GET}
# /reporting/gift-cards {GET}
# /reporting/location-country {GET}
# /reporting/location-us {GET}
# /reporting/payment-method {GET}
# /reporting/product-performance {GET}
# /reporting/shipping-method {GET}
# /review/:productID {POST}
# /review/:reviewID {DELETE}
# /review/:reviewID {GET}
# /review/:reviewID {PUT}
# /reviews {GET}
# /rts/bestsellers {GET}
# /rts/conversion {GET}
# /rts/sales {GET}
# /rts/sales/detail/:from/:to {GET}
# /rts/visit {POST}
# /rts/visits {GET}
# /rts/visits/detail/:from/:to {GET}
# /saleprice {POST}
# /saleprice/:id {DELETE}
# /saleprice/:id {GET}
# /saleprice/:id {PUT}
# /saleprices {GET}
# /seo/attributes {GET}
# /seo/canonical/:id {GET}
# /seo/item {POST}
# /seo/item/:itemID {DELETE}
# /seo/item/:itemID {PUT}
# /seo/items {GET}
# /seo/sitemap {GET}
# /seo/sitemap/sitemap.xml {GET}
# /seo/url {GET}
# /seo/url/:url {GET}
# /shipstation {GET}
# /shipstation {POST}
# /stock/:productID {DELETE}
# /stock/:productID {GET}
# /stock/:productID/:qty {POST}
# /stock/:productID/:qty {PUT}
# /subscriptional/checkout {GET}
# /subscriptions {GET}
# /subscriptions/:id {GET}
# /subscriptions/:id {PUT}
# /swatch/media {GET}
# /swatch/media {POST}
# /swatch/media/:mediaName {DELETE}
# /swatch/media/extention {GET}
# /taxes/csv {GET}
# /taxes/csv {POST}
# /trustpilot/products/summaries {GET}
# /update/subscriptions {GET}
# /visit {GET}
# /visit {PUT}
# /visit/address {POST}
# /visit/address/:addressID {DELETE}
# /visit/address/:addressID {GET}
# /visit/address/:addressID {PUT}
# /visit/addresses {GET}

  /visit/login:
    post:
      tags:
      - auth
      description: makes login for a current visit
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Processed
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

# /visit/login-facebook {POST}
# /visit/login-google {POST}

  /visit/logout:
    get:
      tags:
        - auth
      description: makes logout for current visit
      security:
        - OTTEMOSESSION: []
      responses:
        200:
          description: "Processed"
          schema:
            $ref: '#/definitions/ApiResponseWithResultObject'

# /visit/order/:orderID {GET}
# /visit/orders {GET}
# /visit/subscriptions {GET}
# /visit/subscriptions/:id {PUT}
# /visit/tokens {GET}
# /visit/tokens {POST}
# /visit/tokens/:tokenID {DELETE}
# /visit/tokens/default {POST}
# /visitor {POST}
# /visitor/:visitorID {DELETE}
# /visitor/:visitorID {GET}
# /visitor/:visitorID {PUT}
# /visitor/:visitorID/address {POST}
# /visitor/:visitorID/address/:addressID {DELETE}
# /visitor/:visitorID/address/:addressID {PUT}
# /visitor/:visitorID/addresses {GET}
# /visitors {GET}
# /visitors/address/:addressID {DELETE}
# /visitors/address/:addressID {GET}
# /visitors/address/:addressID {PUT}
# /visitors/addresses/attributes {GET}
# /visitors/attribute {POST}
# /visitors/attribute/:attribute {DELETE}
# /visitors/attribute/:attribute {PUT}
# /visitors/attributes {GET}
# /visitors/available {POST}
# /visitors/forgot-password/:email {GET}
# /visitors/guests {GET}
# /visitors/invalidate/:email {GET}
# /visitors/mail {POST}
# /visitors/register {POST}
# /visitors/reset-password {POST}
# /visitors/validate/:key {GET}

securityDefinitions:
  OTTEMOSESSION:
    type: apiKey
    name: OTTEMOSESSION
    in: header

definitions:

  ApiResponse:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: string
          level:
            type: integer
          message:
            type: string
      redirect:
        type: string

  ApiResponseWithResultObject:
    allOf:
    - $ref: '#/definitions/ApiResponse'
    - type: object
      properties:
        result:
          type: object

  BlogPostModelHash:
    type: object
    properties:
      _id:
        type: string
      identifier:
        type: string
      published:
        type: boolean
      title:
        type: string
      excerpt:
        type: string
      content:
        type: string
      tags:
        type: array
        items:
          type: string
      featured_image:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  StructAttributeInfo:
    type: object
    properties:
      Model:
        type: string
      Collection:
        type: string
      Attribute:
        type: string
      Type:
        type: string
      Label:
        type: string
      IsRequired:
        type: boolean
      IsStatic:
        type: boolean
      Group:
        type: string
      Editors:
        type: string
      Options:
        type: string
      Default:
        type: string
      Validators:
        type: string
      IsLayered:
        type: boolean
      IsPublic:
        type: boolean

externalDocs:
  description: "Find out more about Ottemo"
  url: "http://ottemo.io"
